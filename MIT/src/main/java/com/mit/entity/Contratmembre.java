package com.mit.entity;

// Generated 23 mai 2016 00:14:51 by Hibernate Tools 3.4.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Contratmembre generated by hbm2java
 */
@Entity
@Table(name = "contratmembre", catalog = "mitdb")
public class Contratmembre implements java.io.Serializable {

	private ContratmembreId id;
	private Membre membre;
	private Tache tache;
	private Pvreunion pvreunion;
	private Contrat contrat;
	private Integer coutTache;

	public Contratmembre() {
	}

	public Contratmembre(ContratmembreId id, Membre membre, Tache tache,
			Contrat contrat) {
		this.id = id;
		this.membre = membre;
		this.tache = tache;
		this.contrat = contrat;
	}

	public Contratmembre(ContratmembreId id, Membre membre, Tache tache,
			Pvreunion pvreunion, Contrat contrat, Integer coutTache) {
		this.id = id;
		this.membre = membre;
		this.tache = tache;
		this.pvreunion = pvreunion;
		this.contrat = contrat;
		this.coutTache = coutTache;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "cin", column = @Column(name = "cin", nullable = false)),
			@AttributeOverride(name = "idProjet", column = @Column(name = "idProjet", nullable = false)),
			@AttributeOverride(name = "idTache", column = @Column(name = "idTache", nullable = false)),
			@AttributeOverride(name = "idContrat", column = @Column(name = "idContrat", nullable = false)) })
	public ContratmembreId getId() {
		return this.id;
	}

	public void setId(ContratmembreId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cin", nullable = false, insertable = false, updatable = false)
	public Membre getMembre() {
		return this.membre;
	}

	public void setMembre(Membre membre) {
		this.membre = membre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "idProjet", referencedColumnName = "idProjet", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "idTache", referencedColumnName = "idTache", nullable = false, insertable = false, updatable = false) })
	public Tache getTache() {
		return this.tache;
	}

	public void setTache(Tache tache) {
		this.tache = tache;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idReunion")
	public Pvreunion getPvreunion() {
		return this.pvreunion;
	}

	public void setPvreunion(Pvreunion pvreunion) {
		this.pvreunion = pvreunion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idContrat", nullable = false, insertable = false, updatable = false)
	public Contrat getContrat() {
		return this.contrat;
	}

	public void setContrat(Contrat contrat) {
		this.contrat = contrat;
	}

	@Column(name = "coutTache", precision = 8, scale = 0)
	public Integer getCoutTache() {
		return this.coutTache;
	}

	public void setCoutTache(Integer coutTache) {
		this.coutTache = coutTache;
	}

}
